{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "location":{
         "type":"string",
         "metadata":{
            "description":"The region to deploy the resources into"
         }
      },
      "adminUsername":{
         "type":"string",
         "metadata":{
            "description":"The name of the Administrator of the new VMs"
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"The password for the Administrator account of the new VMs"
         }
      },
      "tsVMSize":{
         "type":"string",
         "allowedValues":[
            "Standard_D1",
            "Standard_DS1",
            "Standard_D2",
            "Standard_DS2",
            "Standard_D3",
            "Standard_DS3",
            "Standard_D4",
            "Standard_DS4",
            "Standard_D11",
            "Standard_DS11",
            "Standard_D12",
            "Standard_DS12",
            "Standard_D13",
            "Standard_DS13",
            "Standard_D14",
            "Standard_DS14"
         ],
         "metadata":{
            "description":"The size of the Terminal server VMs Created"
         },
         "defaultValue":"Standard_DS1"
      },
      "sqlVMSize":{
         "type":"string",
         "allowedValues":[
            "Standard_D1",
            "Standard_DS1",
            "Standard_D2",
            "Standard_DS2",
            "Standard_D3",
            "Standard_DS3",
            "Standard_D4",
            "Standard_DS4",
            "Standard_D11",
            "Standard_DS11",
            "Standard_D12",
            "Standard_DS12",
            "Standard_D13",
            "Standard_DS13",
            "Standard_D14",
            "Standard_DS14"
         ],
         "metadata":{
            "description":"The size of the SQL VMs Created"
         },
         "defaultValue":"Standard_DS3"
      },
      "storageAccountNamePrefix":{
         "type":"string",
         "metadata":{
            "description":"The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for Terminal servers and SQL VMs"
         }
      },
      "storageAccountType":{
         "type":"string",
         "metadata":{
            "description":"The type of the Storage Account created"
         },
         "defaultValue":"Standard_LRS"
      },
      "virtualNetworkAddressRange":{
         "type":"string",
         "metadata":{
            "description":"The address range of the new VNET in CIDR format"
         },
         "defaultValue":"10.6.0.0/20"
      },
      "tsSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the Terminal servers in the new VNET"
         },
         "defaultValue":"10.6.2.0/24"
      },
      "sqlSubnet":{
         "type":"string",
         "metadata":{
            "description":"The address range of the SQL subnet created in the new VNET"
         },
         "defaultValue":"10.6.3.0/24"
      },
      "sqlNICIPAddress":{
         "type":"string",
         "metadata":{
            "description":"The IP address of the new SQL VM"
         },
         "defaultValue":"10.6.3.200"
      },
      "PublicIPRGName":{
         "type":"string",
         "defaultValue":"",
         "metadata":{
            "description":"Resource Group containing existing TS Public IP address"
         }
      },
      "PublicIPAddressName":{
         "type":"string",
         "metadata":{
            "description":"The existing Public IP address name for TS"
         }
      },
      "dnsPrefix":{
         "type":"string",
         "metadata":{
            "description":"The DNS Prefix for the Public IP Address for the Terminal servers"
         }
      },
      "virtualNetworkName" : {
        "type" : "string",
        "defaultValue" : "gct-vnet1",
        "metadata":{
           "description":"Name of virtual network to be created"
        }
      },
      "baseUrl":{
         "type":"string",
         "metadata":{
            "description":"Base URL for Marketplace",
            "artifactsBaseUrl":""
         },
         "defaultValue":"https://raw.githubusercontent.com/DarylsCorner/ARM-Templates/master/DevLab"
      }
   },
   "variables":{
      "subnetNames":{
         "tsSubnetName":"tsSubnet",
         "sqlSubnetName":"sqlSubnet"
      },
      "vmSettings":{
         "availabilitySets":{
            "groupAAvailabilitySetName":"groupAAvailabilitySet",
            "groupBAvailabilitySetName":"groupBAvailabilitySet",
            "groupCAvailabilitySetName":"groupCAvailabilitySet"
         },
         "noOfSqlVMs":1,
         "vmContainerName":"vhds",
         "tsgroupAVMName":"gct-vm-tsA",
         "tsgroupBVMName":"gct-vm-tsB",
         "tsgroupCVMName":"gct-vm-tsC",
         "sqlVMName":"gct-vm-sql",
         "windowsImagePublisher":"MicrosoftWindowsServer",
         "windowsImageOffer":"WindowsServer",
         "windowsImageSKU":"2008-R2-SP1",
         "windowsDiskSize":128,
         "sqlDiskSize":1000
      },
      "VnetID":"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "networkSecurityGroupName":"gct-nsg1",
      "tsgroupANicName":"[concat(variables('vmSettings').tsgroupAVMName,'-nic')]",
      "tsgroupBNicName":"[concat(variables('vmSettings').tsgroupBVMName,'-nic')]",
      "tsgroupCNicName":"[concat(variables('vmSettings').tsgroupCVMName,'-nic')]",
      "tsSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').tsSubnetName)]",
      "sqlSubnetRef":"[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
      "sqlNicName":"[concat(variables('vmSettings').sqlVMName,'1-nic')]",
      "ids":{
         "sqlNicId":"[resourceId('Microsoft.Network/networkInterfaces',variables('sqlNicName'))]"
      },
      "derivedIds":{
         "sqlIPConfigID":"[concat(variables('ids').sqlNicId,'/ipConfigurations/ipconfig1')]"
      },
      "subnets":[
         {
            "name":"[variables('subnetNames').tsSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('tsSubnet')]"
            }
         },
         {
            "name":"[variables('subnetNames').sqlSubnetName]",
            "properties":{
               "addressPrefix":"[parameters('sqlSubnet')]",
               "networkSecurityGroup":{
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
               }
            }
         }
      ],
      "configuration":{
         "availabilitySetSetupURL":"[concat(parameters('baseUrl'),'/availabilitySets.json')]",
         "creatingStorageAccounts":"[concat(parameters('baseUrl'),'/creatingStorageAccounts.json')]",
         "networkSecurityGroupUrl":"[concat(parameters('baseUrl'),'/creatingNetworkSecurityGroup.json')]",
         "creatingPublicIPsURL":"[concat(parameters('baseUrl'),'/publicip-new.json')]",
         "creatingTSVMsURL":"[concat(parameters('baseUrl'),'/creatingTSVMs.json')]",
         "creatingSQLVMsURL":"[concat(parameters('baseUrl'),'/creatingSQLVMs.json')]",
         "vnetSetupURL":"[concat(parameters('baseUrl'),'/vnet-new.json')]",
         "creatingNicsUrl":"[concat(parameters('baseUrl'),'/creatingNICS.json')]"
      }
   },
   "resources":[
      {
         "name":"CreatingStorageAccounts",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingStorageAccounts]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "storageAccountType":{
                  "value":"[parameters('storageAccountType')]"
               }
            }
         }
      },
      {
         "name":"CreatingPublicIPs",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingPublicIPsURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "publicIPAddressName":{
                  "value":"[parameters('PublicIPAddressName')]"
               },
               "publicIPAddressType":{
                  "value":"dynamic"
               },
               "dnsPrefix":{
                  "value":"[parameters('dnsPrefix')]"
               },
               "publicIpRGName":{
                  "value":"[parameters('PublicIPRGName')]"
               }
            }
         }
      },
      {
         "name":"CreatingAvailabilitySets",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').availabilitySetSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "groupAAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.groupAAvailabilitySetName]"
               },
               "groupBAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.groupBAvailabilitySetName]"
               },
               "groupCAvailabilitySetName":{
                  "value":"[variables('vmSettings').availabilitySets.groupCAvailabilitySetName]"
               }
            }
         }
      },
      {
        "name":"CreatingNetworkSecurityGroup",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-05-01-preview",
        "properties": {
            "mode":"Incremental",
            "templateLink":{
                "uri":"[variables('configuration').networkSecurityGroupURL]",
                "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "networkSecurityGroupName":{
                  "value":"[variables('networkSecurityGroupName)]"
               }
            }
        }
      },
      {
         "name":"CreatingVirtualNetwork",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingNetworkSecurityGroup"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').vnetSetupURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "virtualNetworkName":{
                  "value":"[parameters('virtualNetworkName')]"
               },
               "virtualNetworkAddressRange":{
                  "value":"[parameters('virtualNetworkAddressRange')]"
               },
               "subnets":{
                  "value":"[variables('subnets')]"
               }
            }
         }
      },
      {
         "name":"CreatingNetworkInterfaces",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingVirtualNetwork",
            "Microsoft.Resources/deployments/CreatingPublicIPs"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingNicsUrl]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "sqlNicName":{
                  "value":"[variables('sqlNicName')]"
               },
               "sqlNICIPAddress":{
                  "value":"[parameters('sqlNICIPAddress')]"
               },
               "sqlSubnetRef":{
                  "value":"[variables('sqlSubnetRef')]"
               },
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "tsSubnetRef":{
                  "value":"[variables('tsSubnetRef')]"
               },
               "tsgroupAVMName":{
                  "value":"[variables('vmSettings').tsgroupAVMName]"
               },
               "tsgroupBVMName":{
                  "value":"[variables('vmSettings').tsgroupBVMName]"
               },
               "tsgroupCVMName":{
                  "value":"[variables('vmSettings').tsgroupCVMName]"
               },
               "tsgroupANicName":{
                  "value":"[variables('tsgroupANicName')]"
               },
               "tsgroupBNicName":{
                  "value":"[variables('tsgroupBNicName')]"
               },
               "tsgroupCNicName":{
                  "value":"[variables('tsgroupCNicName')]"
               }
            }
         }
      },
      {
         "name":"CreatingTSVirtualMachines ",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingTSVMsURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "tsgroupAVMName":{
                  "value":"[variables('vmSettings').tsgroupAVMName]"
               },
               "tsgroupBVMName":{
                  "value":"[variables('vmSettings').tsgroupBVMName]"
               },
               "tsgroupCVMName":{
                  "value":"[variables('vmSettings').tsgroupCVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "groupAAvailabilitySet":{
                  "value":"[reference('CreatingAvailabilitySets').outputs.groupAAvailabilitySetName.value]"
               },
               "groupBAvailabilitySet":{
                  "value":"[reference('CreatingAvailabilitySets').outputs.groupBAvailabilitySetName.value]"
               },
               "groupCAvailabilitySet":{
                  "value":"[reference('CreatingAvailabilitySets').outputs.groupCAvailabilitySetName.value]"
               },
               "tsVMSize":{
                  "value":"[parameters('tsVMSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "windowsImagePublisher":{
                  "value":"[variables('vmSettings').windowsImagePublisher]"
               },
               "windowsImageOffer":{
                  "value":"[variables('vmSettings').windowsImageOffer]"
               },
               "windowsImageSKU":{
                  "value":"[variables('vmSettings').windowsImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               },
               "tsgroupANicName":{
                  "value":"[variables('tsgroupANicName')]"
               },
               "tsgroupBNicName":{
                  "value":"[variables('tsgroupBNicName')]"
               },
               "tsgroupCNicName":{
                  "value":"[variables('tsgroupCNicName')]"
               }
            }
         }
      },
      {
         "name":"CreatingSQLVirtualMachines",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "dependsOn":[
            "Microsoft.Resources/deployments/CreatingStorageAccounts",
            "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
            "Microsoft.Resources/deployments/CreatingAvailabilitySets"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('configuration').creatingSQLVMsURL]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "sqlVMName":{
                  "value":"[variables('vmSettings').sqlVMName]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "storageAccountNamePrefix":{
                  "value":"[parameters('storageAccountNamePrefix')]"
               },
               "sqlVMSize":{
                  "value":"[parameters('sqlVMSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "windowsImagePublisher":{
                  "value":"[variables('vmSettings').windowsImagePublisher]"
               },
               "windowsImageOffer":{
                  "value":"[variables('vmSettings').windowsImageOffer]"
               },
               "windowsImageSKU":{
                  "value":"[variables('vmSettings').windowsImageSKU]"
               },
               "vmContainerName":{
                  "value":"[variables('vmSettings').vmContainerName]"
               }
            }
         }
      }
   ],
   "outputs": {
     "fqdn": {
       "value": "[reference('CreatingPublicIPs').outputs.fqdn.value]",
       "type": "string"
     }
   }
}


